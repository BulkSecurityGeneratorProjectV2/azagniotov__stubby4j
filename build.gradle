// vim: ft=groovy
import org.kt3k.gradle.plugin.coveralls.domain.CoberturaSourceReportFactory
ext.coberturaSourceReportFactory = new CoberturaSourceReportFactory()
project(':').ext.map = [:]
project(':').ext.map['total'] = 0
project(':').ext.map['failure'] = 0

defaultTasks 'clean', 'build', 'allTestReport'
description = 'Gradle configuration for stubby4j'

buildscript {
   repositories {
      mavenCentral()
      jcenter()
   }
   dependencies {
      classpath 'com.bmuschko:gradle-nexus-plugin:2.3'
      classpath 'org.kt3k.gradle.plugin:coveralls-gradle-plugin:2.3.1'
   }
}

allprojects {
   apply plugin: 'java'
   apply plugin: 'idea'
   apply plugin: 'eclipse'
   project.buildDir = 'target'
   if (project.name != 'main') {
      apply from: "$rootDir/conf/gradle/console.gradle"
   }
}

apply from: "$rootDir/conf/gradle/ides.gradle"

subprojects {
   subproject ->
      sourceCompatibility = 1.7
      tasks.withType(JavaCompile) {
         doFirst {
            assert sourceCompatibility == "1.7": "The sourceCompatibility of $name was changed!"
         }
         options.encoding = 'UTF-8'
      }
      targetCompatibility = 1.7
      repositories {
         mavenCentral()
         jcenter()
         mavenLocal()
      }
      apply from: "$rootDir/conf/gradle/dependency.gradle"
}

task allTestReport(type: TestReport) {
   destinationDir = file("$buildDir/reports/all")
   reportOn subprojects*.test 
   doLast {
      def moduleTabs = "\t";
      def prefixSpace = "      ";
      def prefixDots = ":::::";
      def hr = prefixSpace + "::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::";
      println ""
      println hr
      
      for ( testProjectName in project(':').ext.map ) {   
         if (testProjectName.key == 'total' || testProjectName.key == 'failure') {
            continue;
         }         
         println prefixSpace + prefixDots + "  " +  testProjectName.key + 
         " (failed: " + testProjectName.value['failure'] + ", passed: " + testProjectName.value['success'] + ", total: " + testProjectName.value['total'] + ")"
         for ( testClassName in testProjectName.value ) {
             if (testClassName.key == 'total' || testClassName.key == 'success' || testClassName.key == 'failure') {
                  continue;
             }
             println prefixSpace + prefixDots + "    " +  moduleTabs + testClassName.key + 
                                     " (" + testClassName.value['success'] + "/" + testClassName.value['total'] + ")"
         }
         println hr
      }
      println prefixSpace + prefixDots + "                  Total tests executed in $stubbyProjectName: " + project(':').ext.map['total']
      println hr
      if (project(':').ext.map['failure'] > 0) {
         throw new GradleException(project(':').ext.map['failure'] + " TESTS FAILED!!!")
      }
   }
}

